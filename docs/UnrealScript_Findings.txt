This is a document detailing any findings regarding unknown UnrealScript
opcode definitions and quirks with our current method of serializing
bytecode. Many opcode definitions can be found in the UT-Package-File-Format
pdf, but not all are defined. It is important to understand all of them 
so as to properly load all Unreal Engine 1 content.

---------------------------------------------------------------------
Bugs/Misunderstandings
---------------------------------------------------------------------
- EX_IntConstByte inconsistency with documentation
  Description:
    The package file format pdf says that a TOKEN follows when reading an
    EX_IntConstByte. Upon inspection of DeusEx Core::Object::Sprintf and
    testing done on 227j, it appears that a byte follows and not a TOKEN.
  Solution:
    Read a byte instead of a token

- EX_Context: strange 3 bytes after object reference
  Description:
    EX_Context seems to be a bytecode that is used to tell the scripting
    environment what object is being referred to in the following.

    For example, if I wanted to refer to "Location", then I just need an
    EX_InstanceVariable followed by the ObjRef for Location. but if I wanted
    to refer to Location of another actor "Incoming.Location", then this
    EX_Context bytecode is necesary.

    Based on the UTPT source (ut_packages.pas:7968) The first two bytes 
    (a word) is equal to the number of bytes worth of opcode that this 
    context statement is relevant for. The last byte appears to be some
    kind of size indicator. It is currently unknown what this size byte
    is for.

    Upon further inspection, it appears that EX_Context and EX_ClassContext
    are similar in nature. The difference here is that EX_ClassContext
    takes object references directly while EX_Context takes TOKENs instead

  Solution:
    Read a word after getting EX_Context
    Read a byte after that (purpose still unknown)

---------------------------------------------------------------------
Unknown Opcodes
---------------------------------------------------------------------
N/A
